{"version":3,"sources":["img/gray-marker.png","img/red-marker.png","img/yellow-marker.png","img/green-marker.png","dataSlice.ts","components/Map/index.tsx","utils/sorter.ts","hooks/usePagination.ts","components/Pagination/index.tsx","components/DataTable/index.tsx","hooks/useAppdispatch.ts","components/Header/index.tsx","App.tsx","store.ts","index.tsx"],"names":["dataSilce","createSlice","name","initialState","data","searchKey","reducers","dataSet","state","action","payload","searchKeySet","selectData","createSelector","key","filter","item","addr","includes","actions","kakao","window","Map","ref","useRef","markers","defData","useSelector","useEffect","options","center","maps","LatLng","level","map","current","zoomControl","ZoomControl","addControl","ControlPosition","RIGHT","forEach","markerImg","coords","lat","lng","color","toLowerCase","yellowMarker","redMarker","grayMarker","greenMarker","marker","Marker","position","clickable","image","MarkerImage","Size","overlay","CustomOverlay","yAnchor","info","document","createElement","className","head","title","textContent","closeBtn","innerHTML","onclick","setMap","body","desc","inven","inventory","price","telNum","tel","regDate","regDt","appendChild","overlayContent","setContent","push","event","addListener","sorter","target","reverse","sort","a","b","Number","range","start","end","step","length","Array","from","_","idx","DOTS","Pagination","dataCount","rowsPerPage","currentPage","siblingCount","onPageChange","paginationRange","useMemo","totalPageCount","Math","ceil","leftSiblingIdx","max","rightSiblingIdx","min","shouldShowLeftDots","shouldShowRightDots","firstPageIdx","lastPageIdx","leftRange","rightRange","middleRange","usePagination","lastPage","classnames","disabled","onClick","pageNum","selected","DataTable","useState","tableData","setTableData","setCurrentPage","sortKey","setSortKey","setReverse","currentTableData","firstPageIndex","lastPageIndex","slice","classNames","reversed","prev","fontSize","openTime","code","useAppDispatch","useDispatch","Header","dispatch","text","setText","validateText","useCallback","trim","alert","handleSubmit","e","preventDefault","handleChange","value","location","reload","onSubmit","onChange","placeholder","type","App","isLoading","setIsLoading","url","process","axios","get","then","res","catch","err","console","log","store","configureStore","reducer","dataReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f7208a96.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gray-marker.92f9767f.png\";","export default __webpack_public_path__ + \"static/media/red-marker.5ba94e4a.png\";","export default __webpack_public_path__ + \"static/media/yellow-marker.ac5e6715.png\";","export default __webpack_public_path__ + \"static/media/green-marker.3fea8bad.png\";","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from './store';\r\nimport { defData } from './types/types';\r\n\r\ninterface initialState {\r\n  data: defData[];\r\n  searchKey: string;\r\n}\r\n\r\nconst dataSilce = createSlice({\r\n  name: 'data',\r\n  initialState: { data: [], searchKey: '' } as initialState,\r\n  reducers: {\r\n    dataSet: (state, action: PayloadAction<defData[]>) => {\r\n      state.data = action.payload;\r\n    },\r\n    searchKeySet: (state, action: PayloadAction<string>) => {\r\n      state.searchKey = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst dataSelector = (state: RootState) => state.data.data;\r\nconst searchKeySelector = (state: RootState) => state.data.searchKey;\r\n\r\nexport const selectData = createSelector(\r\n  dataSelector,\r\n  searchKeySelector,\r\n  (data, key) => {\r\n    if (key) {\r\n      return data.filter((item) => item.addr.includes(key));\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n);\r\n\r\nexport const { dataSet, searchKeySet } = dataSilce.actions;\r\nexport default dataSilce.reducer;\r\n","/* global kakao */\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { defData } from '../../types/types';\r\nimport grayMarker from '../../img/gray-marker.png';\r\nimport redMarker from '../../img/red-marker.png';\r\nimport yellowMarker from '../../img/yellow-marker.png';\r\nimport greenMarker from '../../img/green-marker.png';\r\nimport './styles.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectData } from '../../dataSlice';\r\n\r\nconst { kakao } = window;\r\n\r\nfunction Map() {\r\n  const ref = useRef(null);\r\n  const markers: any[] = [];\r\n  const defData = useSelector(selectData);\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      center: new kakao.maps.LatLng(35.85133, 127.734086),\r\n      level: 13,\r\n    };\r\n    const map = new kakao.maps.Map(ref.current, options);\r\n    let zoomControl = new kakao.maps.ZoomControl();\r\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n    defData.forEach((item) => {\r\n      const coords = new kakao.maps.LatLng(item.lat, item.lng);\r\n      const color = item.color.toLowerCase();\r\n      let markerImg;\r\n      switch (color) {\r\n        case 'yellow':\r\n          markerImg = yellowMarker;\r\n          break;\r\n        case 'red':\r\n          markerImg = redMarker;\r\n          break;\r\n        case 'gray':\r\n          markerImg = grayMarker;\r\n          break;\r\n        default:\r\n          markerImg = greenMarker;\r\n      }\r\n      const marker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: coords,\r\n        clickable: true,\r\n        image: new kakao.maps.MarkerImage(\r\n          markerImg,\r\n          new kakao.maps.Size(35, 35)\r\n        ),\r\n      });\r\n      // overlay infowindow\r\n      const overlay = new kakao.maps.CustomOverlay({\r\n        clickable: true,\r\n        position: coords,\r\n        yAnchor: 1.25,\r\n      });\r\n      function overlayContent(item: defData): any {\r\n        let info = document.createElement('div');\r\n        info.className = 'info';\r\n        let head = document.createElement('div');\r\n        head.className = 'head';\r\n        let title = document.createElement('div');\r\n        title.className = 'title';\r\n        title.textContent = item.name;\r\n        let closeBtn = document.createElement('button');\r\n        closeBtn.className = 'closeBtn';\r\n        closeBtn.innerHTML = '&times;';\r\n        closeBtn.onclick = () => overlay.setMap(null);\r\n        let body = document.createElement('div');\r\n        body.className = 'body';\r\n        let desc = document.createElement('div');\r\n        desc.className = 'desc';\r\n        let addr = document.createElement('div');\r\n        addr.className = 'addr';\r\n        addr.textContent = item.addr;\r\n        let inven = document.createElement('div');\r\n        inven.className = 'inven';\r\n        inven.textContent = '재고: ' + item.inventory;\r\n        let price = document.createElement('div');\r\n        price.className = 'price';\r\n        price.textContent = '가격: ' + item.price;\r\n        let telNum = document.createElement('div');\r\n        telNum.className = 'tel';\r\n        telNum.textContent = '연락처: ' + item.tel;\r\n        let regDate = document.createElement('div');\r\n        regDate.className = 'regDt';\r\n        regDate.textContent = '수정일자: ' + item.regDt;\r\n        head.appendChild(title);\r\n        head.appendChild(closeBtn);\r\n        body.appendChild(desc);\r\n        desc.appendChild(addr);\r\n        desc.appendChild(inven);\r\n        desc.appendChild(price);\r\n        desc.appendChild(telNum);\r\n        desc.appendChild(regDate);\r\n        info.appendChild(head);\r\n        info.appendChild(body);\r\n        return info;\r\n      }\r\n      let info = overlayContent(item);\r\n      overlay.setContent(info);\r\n\r\n      markers.push([marker, overlay]);\r\n      kakao.maps.event.addListener(marker, 'click', () => {\r\n        for (const i of markers) {\r\n          i[1].setMap(null);\r\n        }\r\n        overlay.setMap(map);\r\n      });\r\n    });\r\n  }, [defData]);\r\n\r\n  return <div className=\"MapContainer\" ref={ref}></div>;\r\n}\r\n\r\nexport default Map;\r\n","const sorter = <T>(target: T[], key: keyof T, reverse = false): void => {\r\n  if (reverse) {\r\n    switch (key) {\r\n      case 'regDt':\r\n        target.sort((a, b) => (a[key] > b[key] ? 1 : a[key] < b[key] ? -1 : 0));\r\n        break;\r\n      default:\r\n        target.sort((a, b) => (Number(a[key]) > Number(b[key]) ? 1 : Number(a[key]) < Number(b[key]) ? -1 : 0));\r\n    }\r\n  } else {\r\n    switch (key) {\r\n      case 'regDt':\r\n        target.sort((a, b) => (a[key] > b[key] ? -1 : a[key] < b[key] ? 1 : 0));\r\n        break;\r\n      default:\r\n        target.sort((a, b) => (Number(a[key]) > Number(b[key]) ? -1 : Number(a[key]) < Number(b[key]) ? 1 : 0));\r\n    }\r\n  }\r\n};\r\n\r\nexport default sorter;\r\n","import React from 'react';\r\nimport { useMemo } from 'react';\r\n\r\ninterface Props {\r\n  dataCount: number;\r\n  rowsPerPage: number;\r\n  currentPage: number;\r\n  siblingCount: number;\r\n}\r\n\r\nconst range = (start: number, end: number, step: number = 1) => {\r\n  let length = (end - start) / step + 1;\r\n  return Array.from({ length }, (_, idx) => start + idx * step);\r\n};\r\nexport const DOTS = '...';\r\n\r\nexport const usePagination = ({\r\n  dataCount,\r\n  rowsPerPage,\r\n  currentPage,\r\n  siblingCount: siblingCount = 1,\r\n}: Props) => {\r\n  const paginationRange: (typeof DOTS | number)[] = useMemo(() => {\r\n    const totalPageCount = Math.ceil(dataCount / rowsPerPage);\r\n    const totalPageNumbers = siblingCount + 5;\r\n\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    const leftSiblingIdx = Math.max(currentPage - siblingCount, 1);\r\n    const rightSiblingIdx = Math.min(\r\n      currentPage + siblingCount,\r\n      totalPageCount\r\n    );\r\n\r\n    const shouldShowLeftDots = leftSiblingIdx > 2;\r\n    const shouldShowRightDots = rightSiblingIdx < totalPageCount - 2;\r\n\r\n    const firstPageIdx = 1;\r\n    const lastPageIdx = totalPageCount;\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblingCount;\r\n      let leftRange = range(1, leftItemCount);\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    } else if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblingCount;\r\n      let rightRange = range(\r\n        totalPageCount - rightItemCount + 1,\r\n        totalPageCount\r\n      );\r\n      return [firstPageIdx, DOTS, ...rightRange];\r\n    } else {\r\n      let middleRange = range(leftSiblingIdx, rightSiblingIdx);\r\n      return [firstPageIdx, DOTS, ...middleRange, DOTS, lastPageIdx];\r\n    }\r\n  }, [dataCount, rowsPerPage, siblingCount, currentPage]);\r\n  return paginationRange;\r\n};\r\n","import React from 'react';\r\nimport { usePagination, DOTS } from '../../hooks/usePagination';\r\nimport classnames from 'classnames';\r\nimport './styles.scss';\r\n\r\ninterface Props {\r\n  dataCount: number;\r\n  rowsPerPage: number;\r\n  currentPage: number;\r\n  siblingCount?: number;\r\n  onPageChange: React.Dispatch<React.SetStateAction<number>>;\r\n  className: string;\r\n}\r\n\r\nfunction Pagination({\r\n  dataCount,\r\n  rowsPerPage,\r\n  currentPage,\r\n  siblingCount = 2,\r\n  onPageChange,\r\n  className,\r\n}: Props) {\r\n  const paginationRange = usePagination({\r\n    currentPage,\r\n    dataCount,\r\n    siblingCount,\r\n    rowsPerPage,\r\n  });\r\n\r\n  if (currentPage === 0 || paginationRange.length < 2) return null;\r\n\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onDoubleNext = () => {\r\n    if (currentPage >= Math.ceil(dataCount / rowsPerPage) - 10) {\r\n      onPageChange(Math.ceil(dataCount / rowsPerPage));\r\n    } else {\r\n      onPageChange(currentPage + 10);\r\n    }\r\n  };\r\n\r\n  const onPrev = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  const onDoublePrev = () => {\r\n    if (currentPage <= 10) {\r\n      onPageChange(1);\r\n    } else {\r\n      onPageChange(currentPage - 10);\r\n    }\r\n  };\r\n\r\n  let lastPage = paginationRange[paginationRange.length - 1];\r\n  return (\r\n    <ul\r\n      className={classnames('pagination-container', { [className]: className })}\r\n    >\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === 1,\r\n        })}\r\n        onClick={onDoublePrev}\r\n      >\r\n        <div className=\"arrow left\" />\r\n        <div className=\"arrow left\" />\r\n      </li>\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === 1,\r\n        })}\r\n        onClick={onPrev}\r\n      >\r\n        <div className=\"arrow left\" />\r\n      </li>\r\n      {paginationRange.map((pageNum) => {\r\n        if (pageNum === DOTS) {\r\n          return <li className=\"pagination-item dots\">&#8230;</li>;\r\n        } else if (typeof pageNum === 'number') {\r\n          return (\r\n            <li\r\n              className={classnames('pagination-item', {\r\n                selected: pageNum === currentPage,\r\n              })}\r\n              onClick={() => onPageChange(pageNum)}\r\n            >\r\n              {pageNum}\r\n            </li>\r\n          );\r\n        }\r\n      })}\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === lastPage,\r\n        })}\r\n        onClick={onNext}\r\n      >\r\n        <div className=\"arrow right\" />\r\n      </li>\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === lastPage,\r\n        })}\r\n        onClick={onDoubleNext}\r\n      >\r\n        <div className=\"arrow right\" />\r\n        <div className=\"arrow right\" />\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import classNames from 'classnames';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { defData } from '../../types/types';\r\nimport sorter from '../../utils/sorter';\r\nimport Pagination from '../Pagination';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport './styles.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectData } from '../../dataSlice';\r\n\r\nfunction DataTable() {\r\n  const defData = useSelector(selectData);\r\n  const [tableData, setTableData] = useState([...defData]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const rowsPerPage = 10;\r\n\r\n  const [sortKey, setSortKey] = useState<keyof defData | ''>('');\r\n  const [reverse, setReverse] = useState(false);\r\n\r\n  const currentTableData = useMemo(() => {\r\n    const firstPageIndex = (currentPage - 1) * rowsPerPage;\r\n    const lastPageIndex = firstPageIndex + rowsPerPage;\r\n    return tableData.slice(firstPageIndex, lastPageIndex);\r\n  }, [currentPage, tableData]);\r\n\r\n  useEffect(() => {\r\n    setTableData([...defData]);\r\n    setCurrentPage(1);\r\n    setReverse(false);\r\n    setSortKey('');\r\n  }, [defData]);\r\n\r\n  useEffect(() => {\r\n    setReverse(false);\r\n  }, [sortKey]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n    if (sortKey) {\r\n      const target = [...tableData];\r\n      sorter<defData>(target, sortKey, reverse);\r\n      setTableData(target);\r\n    }\r\n  }, [sortKey, reverse]);\r\n  return (\r\n    <div className=\"data-table\">\r\n      <span>요소수 재고 정보</span>\r\n      <div className=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"name\">이름</th>\r\n              <th className=\"addr\">주소</th>\r\n              <th className=\"time\">운영시간</th>\r\n              <th\r\n                className={classNames('cc', {\r\n                  selected: sortKey === 'inventory',\r\n                  reversed: sortKey === 'inventory' && reverse,\r\n                })}\r\n                onClick={() => {\r\n                  setSortKey('inventory');\r\n                  setReverse((prev) => !prev);\r\n                }}\r\n              >\r\n                <div>\r\n                  재고량(L)\r\n                  {sortKey === 'inventory' && reverse ? (\r\n                    <ArrowUpwardIcon fontSize=\"small\" />\r\n                  ) : (\r\n                    sortKey === 'inventory' && (\r\n                      <ArrowDownwardIcon fontSize=\"small\" />\r\n                    )\r\n                  )}\r\n                </div>\r\n              </th>\r\n              <th\r\n                className={classNames('cc', {\r\n                  selected: sortKey === 'price',\r\n                  reversed: sortKey === 'price' && reverse,\r\n                })}\r\n                onClick={() => {\r\n                  setSortKey('price');\r\n                  setReverse((prev) => !prev);\r\n                }}\r\n              >\r\n                <div>\r\n                  가격\r\n                  {sortKey === 'price' && reverse ? (\r\n                    <ArrowUpwardIcon fontSize=\"small\" />\r\n                  ) : (\r\n                    sortKey === 'price' && (\r\n                      <ArrowDownwardIcon fontSize=\"small\" />\r\n                    )\r\n                  )}\r\n                </div>\r\n              </th>\r\n              <th className=\"tel\">전화번호</th>\r\n              <th\r\n                className={classNames('cc', {\r\n                  selected: sortKey === 'regDt',\r\n                  reversed: sortKey === 'regDt' && reverse,\r\n                })}\r\n                onClick={() => {\r\n                  setSortKey('regDt');\r\n                  setReverse((prev) => !prev);\r\n                }}\r\n              >\r\n                <div>\r\n                  수정일자\r\n                  {sortKey === 'regDt' && reverse ? (\r\n                    <ArrowUpwardIcon fontSize=\"small\" />\r\n                  ) : (\r\n                    sortKey === 'regDt' && (\r\n                      <ArrowDownwardIcon fontSize=\"small\" />\r\n                    )\r\n                  )}\r\n                </div>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentTableData.map((item) => (\r\n              <tr key={item.code}>\r\n                <th>{item.name || '정보없음'}</th>\r\n                <td>{item.addr || '정보없음'}</td>\r\n                <td>{item.openTime || '정보없음'}</td>\r\n                <td>{item.inventory || '정보없음'}</td>\r\n                <td>\r\n                  {item.price === 'undefined'\r\n                    ? '정보없음'\r\n                    : item.price || '정보없음'}\r\n                </td>\r\n                <td>{item.tel || '정보없음'}</td>\r\n                <td>{item.regDt || '정보없음'}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <Pagination\r\n        className=\"pagination-bar\"\r\n        dataCount={tableData.length}\r\n        rowsPerPage={rowsPerPage}\r\n        currentPage={currentPage}\r\n        onPageChange={setCurrentPage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import { useDispatch } from 'react-redux';\r\nimport { AppDispatch } from '../store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n","import React, { useCallback, useState } from 'react';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport './styles.scss';\r\nimport { useAppDispatch } from '../../hooks/useAppdispatch';\r\nimport { searchKeySet } from '../../dataSlice';\r\n\r\nfunction Header() {\r\n  const dispatch = useAppDispatch();\r\n  const [text, setText] = useState('');\r\n  const validateText = useCallback(() => {\r\n    if (!text) {\r\n      alert('검색어를 입력해주세요.');\r\n    } else if (text.trim().length < 2) {\r\n      alert('최소 2글자 이상 필요합니다.');\r\n    }\r\n  }, [text]);\r\n\r\n  const handleSubmit = useCallback(\r\n    (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      validateText();\r\n      if (text.trim().length >= 2) {\r\n        dispatch(searchKeySet(text));\r\n        setText('');\r\n      }\r\n    },\r\n    [text, setText, validateText]\r\n  );\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setText(e.target.value);\r\n    },\r\n    [setText]\r\n  );\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo\" onClick={() => window.location.reload()}>\r\n        <span>요소수 정보 서비스</span>\r\n      </div>\r\n      <div className=\"search-container\">\r\n        <form onSubmit={handleSubmit}>\r\n          <span>주소 검색</span>\r\n          <input onChange={handleChange} value={text} placeholder=\"검색\" />\r\n          <button type=\"submit\">\r\n            <SearchIcon />\r\n          </button>\r\n        </form>\r\n        <button\r\n          onClick={() => {\r\n            dispatch(searchKeySet(''));\r\n            setText('');\r\n          }}\r\n        >\r\n          초기화\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './App.scss';\r\nimport axios from 'axios';\r\nimport Map from './components/Map';\r\nimport DataTable from './components/DataTable';\r\nimport Header from './components/Header';\r\nimport { useAppDispatch } from './hooks/useAppdispatch';\r\nimport { dataSet } from './dataSlice';\r\nimport ReactLoading from 'react-loading';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    kakao: any;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const dispatch = useAppDispatch();\r\n  const page = 0;\r\n  const perPage = 100000;\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const apiKey = process.env.REACT_APP_PUBINFO_API_KEY;\r\n  const apiAddr = 'https://api.odcloud.kr/api/uws/v1/inventory';\r\n  const query = `?page=${page}&perPage=${perPage}&returnType=JSON&serviceKey=${apiKey}`;\r\n  const url = apiAddr + query;\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        dispatch(dataSet(res.data.data));\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n      });\r\n  }, [url]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"content\">\r\n        {isLoading ? (\r\n          <div className=\"loading\">\r\n            <ReactLoading type=\"spin\" color=\"blue\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Map />\r\n            <DataTable />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport dataReducer from './dataSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    data: dataReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}