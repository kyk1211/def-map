{"version":3,"sources":["img/gray-marker.png","img/red-marker.png","img/yellow-marker.png","img/green-marker.png","dataSlice.ts","hooks/useAppdispatch.ts","mapSlice.ts","components/Map/index.tsx","utils/sorter.ts","hooks/usePagination.ts","components/Pagination/index.tsx","components/DataTable/index.tsx","components/Header/Search.tsx","components/Header/index.tsx","App.tsx","store.ts","index.tsx"],"names":["dataSilce","createSlice","name","initialState","data","searchKey","reducers","dataSet","state","action","payload","searchKeySet","selectData","createSelector","key","filter","item","addr","toLowerCase","includes","actions","useAppDispatch","useDispatch","mapSilce","map","markers","setMap","addMarker","push","kakao","window","Map","containerRef","useRef","useState","kakaoMap","setKakaoMap","setMarkers","defData","useSelector","dispatch","useEffect","options","center","maps","LatLng","level","current","zoomControl","ZoomControl","addControl","ControlPosition","RIGHT","forEach","coords","lat","lng","markerImg","color","yellowMarker","redMarker","grayMarker","greenMarker","createMarkerColor","marker","Marker","position","clickable","image","MarkerImage","Size","overlay","CustomOverlay","yAnchor","info","document","createElement","className","head","title","textContent","closeBtn","innerHTML","onclick","body","desc","inven","inventory","price","telNum","tel","regDate","regDt","appendChild","overlayContent","setContent","prev","code","pos","event","addListener","ref","sorter","target","reverse","sort","a","b","Number","range","start","end","step","length","Array","from","_","idx","DOTS","Pagination","dataCount","rowsPerPage","currentPage","siblingCount","onPageChange","paginationRange","useMemo","totalPageCount","Math","ceil","leftSiblingIdx","max","rightSiblingIdx","min","shouldShowLeftDots","shouldShowRightDots","firstPageIdx","lastPageIdx","leftRange","rightRange","middleRange","usePagination","lastPage","classnames","disabled","onClick","pageNum","index","selected","DataTable","tableData","setTableData","setCurrentPage","sortKey","setSortKey","setReverse","currentTableData","firstPageIndex","lastPageIndex","slice","autoHide","autoHideTimeout","autoHideDuration","classNames","reversed","fontSize","e","stopPropagation","setCenter","getPosition","openTime","Search","text","setText","validateText","useCallback","trim","alert","handleSubmit","preventDefault","handleChange","value","onSubmit","onChange","placeholder","type","Header","location","reload","open","App","isLoading","setIsLoading","url","process","axios","get","then","res","catch","err","console","log","store","configureStore","reducer","dataReducer","mapReducer","middleware","getDefaultMiddleware","serializableCheck","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.30a28f4f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gray-marker.92f9767f.png\";","export default __webpack_public_path__ + \"static/media/red-marker.5ba94e4a.png\";","export default __webpack_public_path__ + \"static/media/yellow-marker.ac5e6715.png\";","export default __webpack_public_path__ + \"static/media/green-marker.3fea8bad.png\";","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from './store';\r\n\r\ninterface initialState {\r\n  data: defData[];\r\n  searchKey: string;\r\n}\r\n\r\nconst dataSilce = createSlice({\r\n  name: 'data',\r\n  initialState: { data: [], searchKey: '' } as initialState,\r\n  reducers: {\r\n    dataSet: (state, action: PayloadAction<defData[]>) => {\r\n      state.data = action.payload;\r\n    },\r\n    searchKeySet: (state, action: PayloadAction<string>) => {\r\n      state.searchKey = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst dataSelector = (state: RootState) => state.data.data;\r\nconst searchKeySelector = (state: RootState) => state.data.searchKey;\r\n\r\nexport const selectData = createSelector(dataSelector, searchKeySelector, (data, key) => {\r\n  if (key) {\r\n    return data.filter((item) => item.addr.toLowerCase().includes(key.toLowerCase()));\r\n  } else {\r\n    return data;\r\n  }\r\n});\r\n\r\nexport const { dataSet, searchKeySet } = dataSilce.actions;\r\nexport default dataSilce.reducer;\r\n","import { useDispatch } from 'react-redux';\r\nimport { AppDispatch } from '../store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from './store';\r\n\r\ninterface initialState {\r\n  map: any;\r\n  markers: any[][];\r\n}\r\n\r\nconst mapSilce = createSlice({\r\n  name: 'map',\r\n  initialState: { map: null, markers: [] } as initialState,\r\n  reducers: {\r\n    setMap: (state, action: PayloadAction<any>) => {\r\n      state.map = action.payload;\r\n    },\r\n    addMarker: (state, action: PayloadAction<any>) => {\r\n      state.markers.push(action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const mapSelector = (state: RootState) => state.map.map;\r\n\r\nexport const { setMap, addMarker } = mapSilce.actions;\r\nexport default mapSilce.reducer;\r\n","/* global kakao */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport grayMarker from '../../img/gray-marker.png';\r\nimport redMarker from '../../img/red-marker.png';\r\nimport yellowMarker from '../../img/yellow-marker.png';\r\nimport greenMarker from '../../img/green-marker.png';\r\nimport './styles.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectData } from '../../dataSlice';\r\nimport { useAppDispatch } from '../../hooks/useAppdispatch';\r\nimport { addMarker, setMap } from '../../mapSlice';\r\n\r\nconst { kakao } = window;\r\n\r\nfunction Map() {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [kakaoMap, setKakaoMap] = useState<any>(null);\r\n  const [markers, setMarkers] = useState<any[]>([]);\r\n  const defData = useSelector(selectData);\r\n  const dispatch = useAppDispatch();\r\n\r\n  function createMarkerColor(color: string): string {\r\n    switch (color) {\r\n      case 'yellow':\r\n        return yellowMarker;\r\n      case 'red':\r\n        return redMarker;\r\n      case 'gray':\r\n        return grayMarker;\r\n      default:\r\n        return greenMarker;\r\n    }\r\n  }\r\n\r\n  function overlayContent(item: defData, overlay: any): HTMLDivElement {\r\n    let info = document.createElement('div');\r\n    info.className = 'info';\r\n\r\n    let head = document.createElement('div');\r\n    head.className = 'head';\r\n\r\n    let title = document.createElement('div');\r\n    title.className = 'title';\r\n    title.textContent = item.name;\r\n\r\n    let closeBtn = document.createElement('button');\r\n    closeBtn.className = 'closeBtn';\r\n    closeBtn.innerHTML = '&times;';\r\n    closeBtn.onclick = () => overlay.setMap(null);\r\n\r\n    let body = document.createElement('div');\r\n    body.className = 'body';\r\n\r\n    let desc = document.createElement('div');\r\n    desc.className = 'desc';\r\n\r\n    let addr = document.createElement('div');\r\n    addr.className = 'addr';\r\n    addr.textContent = item.addr;\r\n\r\n    let inven = document.createElement('div');\r\n    inven.className = 'inven';\r\n    inven.textContent = '재고: ' + item.inventory;\r\n\r\n    let price = document.createElement('div');\r\n    price.className = 'price';\r\n    price.textContent = '가격: ' + item.price;\r\n\r\n    let telNum = document.createElement('div');\r\n    telNum.className = 'tel';\r\n    telNum.textContent = '연락처: ' + item.tel;\r\n\r\n    let regDate = document.createElement('div');\r\n    regDate.className = 'regDt';\r\n    regDate.textContent = '수정일자: ' + item.regDt;\r\n\r\n    head.appendChild(title);\r\n    head.appendChild(closeBtn);\r\n    body.appendChild(desc);\r\n    desc.appendChild(addr);\r\n    desc.appendChild(inven);\r\n    desc.appendChild(price);\r\n    desc.appendChild(telNum);\r\n    desc.appendChild(regDate);\r\n    info.appendChild(head);\r\n    info.appendChild(body);\r\n    return info;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      center: new kakao.maps.LatLng(35.85133, 127.734086),\r\n      level: 13,\r\n    };\r\n    const map = new kakao.maps.Map(containerRef.current, options);\r\n    let zoomControl = new kakao.maps.ZoomControl();\r\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n    setKakaoMap(map);\r\n    dispatch(setMap(map));\r\n  }, [containerRef]);\r\n\r\n  useEffect(() => {\r\n    if (kakaoMap === null) return;\r\n    defData.forEach((item) => {\r\n      const coords = new kakao.maps.LatLng(item.lat, item.lng);\r\n      const color = item.color.toLowerCase();\r\n      let markerImg = createMarkerColor(color);\r\n      const marker = new kakao.maps.Marker({\r\n        map: kakaoMap,\r\n        position: coords,\r\n        clickable: true,\r\n        image: new kakao.maps.MarkerImage(markerImg, new kakao.maps.Size(35, 35)),\r\n      });\r\n\r\n      const overlay = new kakao.maps.CustomOverlay({\r\n        clickable: true,\r\n        position: coords,\r\n        yAnchor: 1,\r\n      });\r\n\r\n      let info = overlayContent(item, overlay);\r\n      overlay.setContent(info);\r\n\r\n      setMarkers((prev) => [...prev, [marker, overlay]]);\r\n      dispatch(addMarker([marker, overlay, { code: item.code, pos: coords }]));\r\n      kakao.maps.event.addListener(marker, 'click', () => {\r\n        setMarkers((prev) => {\r\n          for (const i of prev) {\r\n            i[1].setMap(null);\r\n          }\r\n          return [...prev];\r\n        });\r\n        overlay.setMap(kakaoMap);\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      setMarkers((prev) => {\r\n        for (const i of prev) {\r\n          i[0].setMap(null);\r\n        }\r\n        return [];\r\n      });\r\n    };\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [defData, kakaoMap]);\r\n\r\n  return <div className=\"MapContainer\" ref={containerRef}></div>;\r\n}\r\n\r\nexport default Map;\r\n","const sorter = <T>(target: T[], key: keyof T, reverse = false): void => {\r\n  if (reverse) {\r\n    switch (key) {\r\n      case 'regDt':\r\n        target.sort((a, b) => (a[key] > b[key] ? 1 : a[key] < b[key] ? -1 : 0));\r\n        break;\r\n      default:\r\n        target.sort((a, b) => (Number(a[key]) > Number(b[key]) ? 1 : Number(a[key]) < Number(b[key]) ? -1 : 0));\r\n    }\r\n  } else {\r\n    switch (key) {\r\n      case 'regDt':\r\n        target.sort((a, b) => (a[key] > b[key] ? -1 : a[key] < b[key] ? 1 : 0));\r\n        break;\r\n      default:\r\n        target.sort((a, b) => (Number(a[key]) > Number(b[key]) ? -1 : Number(a[key]) < Number(b[key]) ? 1 : 0));\r\n    }\r\n  }\r\n};\r\n\r\nexport default sorter;\r\n","import { useMemo } from 'react';\r\n\r\ninterface Props {\r\n  dataCount: number;\r\n  rowsPerPage: number;\r\n  currentPage: number;\r\n  siblingCount: number;\r\n}\r\n\r\nconst range = (start: number, end: number, step: number = 1) => {\r\n  let length = (end - start) / step + 1;\r\n  return Array.from({ length }, (_, idx) => start + idx * step);\r\n};\r\nexport const DOTS = '...';\r\n\r\nexport const usePagination = ({ dataCount, rowsPerPage, currentPage, siblingCount = 1 }: Props) => {\r\n  const paginationRange: (typeof DOTS | number)[] = useMemo(() => {\r\n    const totalPageCount = Math.ceil(dataCount / rowsPerPage);\r\n    const totalPageNumbers = siblingCount + 5;\r\n\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    const leftSiblingIdx = Math.max(currentPage - siblingCount, 1);\r\n    const rightSiblingIdx = Math.min(currentPage + siblingCount, totalPageCount);\r\n\r\n    const shouldShowLeftDots = leftSiblingIdx > 2;\r\n    const shouldShowRightDots = rightSiblingIdx < totalPageCount - 2;\r\n\r\n    const firstPageIdx = 1;\r\n    const lastPageIdx = totalPageCount;\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblingCount;\r\n      let leftRange = range(1, leftItemCount);\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    } else if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblingCount;\r\n      let rightRange = range(totalPageCount - rightItemCount + 1, totalPageCount);\r\n      return [firstPageIdx, DOTS, ...rightRange];\r\n    } else {\r\n      let middleRange = range(leftSiblingIdx, rightSiblingIdx);\r\n      return [firstPageIdx, DOTS, ...middleRange, DOTS, lastPageIdx];\r\n    }\r\n  }, [dataCount, rowsPerPage, siblingCount, currentPage]);\r\n  return paginationRange;\r\n};\r\n","import React from 'react';\r\nimport { usePagination, DOTS } from '../../hooks/usePagination';\r\nimport classnames from 'classnames';\r\nimport './styles.scss';\r\n\r\ninterface Props {\r\n  dataCount: number;\r\n  rowsPerPage: number;\r\n  currentPage: number;\r\n  siblingCount?: number;\r\n  onPageChange: React.Dispatch<React.SetStateAction<number>>;\r\n  className: string;\r\n}\r\n\r\nfunction Pagination({ dataCount, rowsPerPage, currentPage, siblingCount = 2, onPageChange, className }: Props) {\r\n  const paginationRange = usePagination({\r\n    currentPage,\r\n    dataCount,\r\n    siblingCount,\r\n    rowsPerPage,\r\n  });\r\n\r\n  if (currentPage === 0 || paginationRange.length < 2) return null;\r\n\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onDoubleNext = () => {\r\n    if (currentPage >= Math.ceil(dataCount / rowsPerPage) - 10) {\r\n      onPageChange(Math.ceil(dataCount / rowsPerPage));\r\n    } else {\r\n      onPageChange(currentPage + 10);\r\n    }\r\n  };\r\n\r\n  const onPrev = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  const onDoublePrev = () => {\r\n    if (currentPage <= 10) {\r\n      onPageChange(1);\r\n    } else {\r\n      onPageChange(currentPage - 10);\r\n    }\r\n  };\r\n\r\n  let lastPage = paginationRange[paginationRange.length - 1];\r\n  return (\r\n    <ul className={classnames('pagination-container', { [className]: className })}>\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === 1,\r\n        })}\r\n        onClick={onDoublePrev}\r\n      >\r\n        <div className=\"arrow left\" />\r\n        <div className=\"arrow left\" />\r\n      </li>\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === 1,\r\n        })}\r\n        onClick={onPrev}\r\n      >\r\n        <div className=\"arrow left\" />\r\n      </li>\r\n      {paginationRange.map((pageNum, index) => {\r\n        if (pageNum === DOTS) {\r\n          return (\r\n            <li key={index} className=\"pagination-item dots\">\r\n              &#8230;\r\n            </li>\r\n          );\r\n        } else {\r\n          return (\r\n            <li\r\n              key={index}\r\n              className={classnames('pagination-item', {\r\n                selected: pageNum === currentPage,\r\n              })}\r\n              onClick={() => onPageChange(pageNum)}\r\n            >\r\n              {pageNum}\r\n            </li>\r\n          );\r\n        }\r\n      })}\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === lastPage,\r\n        })}\r\n        onClick={onNext}\r\n      >\r\n        <div className=\"arrow right\" />\r\n      </li>\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === lastPage,\r\n        })}\r\n        onClick={onDoubleNext}\r\n      >\r\n        <div className=\"arrow right\" />\r\n        <div className=\"arrow right\" />\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import classNames from 'classnames';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport sorter from '../../utils/sorter';\r\nimport Pagination from '../Pagination';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport './styles.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectData } from '../../dataSlice';\r\nimport Scrollbars from 'react-custom-scrollbars-2';\r\nimport { RootState } from '../../store';\r\n\r\nfunction DataTable() {\r\n  const map = useSelector((state: RootState) => state.map.map);\r\n  const markers = useSelector((state: RootState) => state.map.markers);\r\n  const defData = useSelector(selectData);\r\n  const [tableData, setTableData] = useState([...defData]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const rowsPerPage = 10;\r\n\r\n  const [sortKey, setSortKey] = useState<keyof defData | ''>('');\r\n  const [reverse, setReverse] = useState(false);\r\n\r\n  const currentTableData = useMemo(() => {\r\n    const firstPageIndex = (currentPage - 1) * rowsPerPage;\r\n    const lastPageIndex = firstPageIndex + rowsPerPage;\r\n    return tableData.slice(firstPageIndex, lastPageIndex);\r\n  }, [currentPage, tableData]);\r\n\r\n  useEffect(() => {\r\n    setTableData([...defData]);\r\n    setCurrentPage(1);\r\n    setReverse(false);\r\n    setSortKey('');\r\n  }, [defData]);\r\n\r\n  useEffect(() => {\r\n    setReverse(false);\r\n  }, [sortKey]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n    if (sortKey) {\r\n      const target = [...tableData];\r\n      sorter<defData>(target, sortKey, reverse);\r\n      setTableData(target);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [sortKey, reverse]);\r\n\r\n  return (\r\n    <div className=\"data-table\">\r\n      <span>요소수 재고 정보</span>\r\n      <div className=\"table-container\">\r\n        <Scrollbars autoHide autoHideTimeout={1000} autoHideDuration={200}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"name\">이름</th>\r\n                <th className=\"addr\">주소</th>\r\n                <th className=\"time\">운영시간</th>\r\n                <th\r\n                  className={classNames('cc', {\r\n                    selected: sortKey === 'inventory',\r\n                    reversed: sortKey === 'inventory' && reverse,\r\n                  })}\r\n                  onClick={() => {\r\n                    setSortKey('inventory');\r\n                    setReverse((prev) => !prev);\r\n                  }}\r\n                >\r\n                  <div>\r\n                    재고량(L)\r\n                    {sortKey === 'inventory' && reverse ? (\r\n                      <ArrowUpwardIcon fontSize=\"small\" />\r\n                    ) : (\r\n                      sortKey === 'inventory' && <ArrowDownwardIcon fontSize=\"small\" />\r\n                    )}\r\n                  </div>\r\n                </th>\r\n                <th\r\n                  className={classNames('cc', {\r\n                    selected: sortKey === 'price',\r\n                    reversed: sortKey === 'price' && reverse,\r\n                  })}\r\n                  onClick={() => {\r\n                    setSortKey('price');\r\n                    setReverse((prev) => !prev);\r\n                  }}\r\n                >\r\n                  <div>\r\n                    가격\r\n                    {sortKey === 'price' && reverse ? (\r\n                      <ArrowUpwardIcon fontSize=\"small\" />\r\n                    ) : (\r\n                      sortKey === 'price' && <ArrowDownwardIcon fontSize=\"small\" />\r\n                    )}\r\n                  </div>\r\n                </th>\r\n                <th className=\"tel\">전화번호</th>\r\n                <th\r\n                  className={classNames('cc', {\r\n                    selected: sortKey === 'regDt',\r\n                    reversed: sortKey === 'regDt' && reverse,\r\n                  })}\r\n                  onClick={() => {\r\n                    setSortKey('regDt');\r\n                    setReverse((prev) => !prev);\r\n                  }}\r\n                >\r\n                  <div>\r\n                    수정일자\r\n                    {sortKey === 'regDt' && reverse ? (\r\n                      <ArrowUpwardIcon fontSize=\"small\" />\r\n                    ) : (\r\n                      sortKey === 'regDt' && <ArrowDownwardIcon fontSize=\"small\" />\r\n                    )}\r\n                  </div>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentTableData.map((item) => (\r\n                <tr key={item.code}>\r\n                  <th\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      for (const marker of markers) {\r\n                        marker[1].setMap(null);\r\n                        if (marker[2].code === item.code) {\r\n                          marker[1].setMap(map);\r\n                          map.setCenter(marker[1].getPosition());\r\n                        }\r\n                      }\r\n                    }}\r\n                  >\r\n                    {item.name || '정보없음'}\r\n                  </th>\r\n                  <td>{item.addr || '정보없음'}</td>\r\n                  <td>{item.openTime || '정보없음'}</td>\r\n                  <td>{item.inventory || '정보없음'}</td>\r\n                  <td>\r\n                    {item.price === 'undefined'\r\n                      ? '정보없음'\r\n                      : item.price === '0'\r\n                      ? '정보없음'\r\n                      : item.price\r\n                      ? item.price\r\n                      : '정보없음'}\r\n                  </td>\r\n                  <td>{item.tel || '정보없음'}</td>\r\n                  <td>{item.regDt || '정보없음'}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </Scrollbars>\r\n      </div>\r\n      <Pagination\r\n        className=\"pagination-bar\"\r\n        dataCount={tableData.length}\r\n        rowsPerPage={rowsPerPage}\r\n        currentPage={currentPage}\r\n        onPageChange={setCurrentPage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { searchKeySet } from '../../dataSlice';\r\nimport { useAppDispatch } from '../../hooks/useAppdispatch';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nexport default function Search() {\r\n  const dispatch = useAppDispatch();\r\n  const [text, setText] = useState('');\r\n  const validateText = useCallback(() => {\r\n    if (!text) {\r\n      alert('검색어를 입력해주세요.');\r\n    } else if (text.trim().length < 2) {\r\n      alert('최소 2글자 이상 필요합니다.');\r\n    }\r\n  }, [text]);\r\n\r\n  const handleSubmit = useCallback(\r\n    (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      validateText();\r\n      if (text.trim().length >= 2) {\r\n        dispatch(searchKeySet(text));\r\n        setText('');\r\n      }\r\n    },\r\n    [text, setText, validateText, dispatch]\r\n  );\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setText(e.target.value);\r\n    },\r\n    [setText]\r\n  );\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input onChange={handleChange} value={text} placeholder=\"주소 검색\" />\r\n        <button type=\"submit\">\r\n          <SearchIcon />\r\n        </button>\r\n      </form>\r\n      <button\r\n        onClick={() => {\r\n          dispatch(searchKeySet(''));\r\n          setText('');\r\n        }}\r\n      >\r\n        초기화\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './styles.scss';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport Search from './Search';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"nav-left\">\r\n        <div className=\"logo\" onClick={() => window.location.reload()}>\r\n          <span>요소수 정보 서비스</span>\r\n        </div>\r\n        <div className=\"source\" onClick={() => window.open('https://github.com/kyk1211/def-map', '_blank')}>\r\n          <GitHubIcon fontSize=\"large\" />\r\n        </div>\r\n      </div>\r\n      <Search />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './App.scss';\r\nimport axios from 'axios';\r\nimport Map from './components/Map';\r\nimport DataTable from './components/DataTable';\r\nimport Header from './components/Header';\r\nimport { useAppDispatch } from './hooks/useAppdispatch';\r\nimport { dataSet } from './dataSlice';\r\nimport ReactLoading from 'react-loading';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    kakao: any;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const dispatch = useAppDispatch();\r\n  const page = 0;\r\n  const perPage = 100000;\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const apiKey = process.env.REACT_APP_PUBINFO_API_KEY;\r\n  const apiAddr = 'https://api.odcloud.kr/api/uws/v1/inventory';\r\n  const query = `?page=${page}&perPage=${perPage}&returnType=JSON&serviceKey=${apiKey}`;\r\n  const url = apiAddr + query;\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        dispatch(dataSet(res.data.data));\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [url, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"content\">\r\n        {isLoading ? (\r\n          <div className=\"loading\">\r\n            <ReactLoading type=\"spin\" color=\"blue\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Map />\r\n            <DataTable />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport dataReducer from './dataSlice';\r\nimport mapReducer from './mapSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    data: dataReducer,\r\n    map: mapReducer,\r\n  },\r\n  middleware(getDefaultMiddleware) {\r\n    return getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    });\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}